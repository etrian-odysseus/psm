
void main( float4 in a_Position  : POSITION,
		   float4 in a_Color     : COLOR0,
		   float4 out v_Position : POSITION,
		   float4 out v_Color    : COLOR0,
		   uniform float4x4 u_viewMatrix,
		   uniform float4x4 u_projMatrix,
		   uniform float4x4 u_worldMatrix
		   )
{
	float4x4 preViewProjection = mul(u_viewMatrix, u_projMatrix);
	float4x4 preWorldViewProjection = mul(u_worldMatrix, preWorldViewProjection);
	v_Position = mul(a_Position, preWorldViewProjection);
	v_Color = a_Color;
}

/*
VertexToPixel ColoredNoShadingVS( float4 inPos : POSITION, float4 inColor: COLOR)
{	
	VertexToPixel Output = (VertexToPixel)0;
	float4x4 preViewProjection = mul (xView, xProjection);
	float4x4 preWorldViewProjection = mul (xWorld, preViewProjection);
    
	Output.Position = mul(inPos, preWorldViewProjection);
	Output.Color = inColor;
    
	return Output;    
} 

void main(float4 in a_Position    : POSITION,
          float2 in a_TexCoord    : TEXCOORD0,
          float4 in a_VertexColor : COLOR0,
          float4 out v_Position   : POSITION,
          float2 out v_TexCoord   : TEXCOORD0,
          float4 out v_Color      : COLOR0,
          uniform float4x4 u_ScreenMatrix)
{
	v_Position = mul(a_Position, u_ScreenMatrix);
	v_TexCoord = a_TexCoord;
	v_Color = a_VertexColor;
}
*/